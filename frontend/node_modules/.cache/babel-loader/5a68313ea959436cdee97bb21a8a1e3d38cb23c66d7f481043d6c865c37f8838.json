{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinopc\\\\Desktop\\\\PROJETOS_DEV\\\\bus-app\\\\frontend\\\\src\\\\components\\\\GeocodingSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeocodingSearch = ({\n  onPointSelect\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleGeocodingSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/geocoding?query=${query}`);\n      setResults(response.data || []);\n    } catch (error) {\n      console.error('Erro na pesquisa de geocodificação:', error);\n    }\n  };\n  const handlePointSelection = result => {\n    setSelectedItem(result);\n    if (typeof onPointSelect === 'function') {\n      onPointSelect(result);\n    } else {\n      console.error('onPointSelect não é uma função');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Insira uma localidade ou ponto de \\xF4nibus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeocodingSearch,\n      children: \"Pesquisar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(results) && results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handlePointSelection(result),\n        style: {\n          backgroundColor: selectedItem === result ? 'lightblue' : 'white'\n        },\n        children: [result.properties.name, \" - Lat: \", result.geometry.coordinates[1], \", Lng: \", result.geometry.coordinates[0]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(GeocodingSearch, \"gjgqjAq4QVEtio9exQZguUm2Z6U=\");\n_c = GeocodingSearch;\nexport default GeocodingSearch;\nvar _c;\n$RefreshReg$(_c, \"GeocodingSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GeocodingSearch","onPointSelect","_s","query","setQuery","results","setResults","selectedItem","setSelectedItem","handleGeocodingSearch","response","get","data","error","console","handlePointSelection","result","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","map","index","style","backgroundColor","properties","name","geometry","coordinates","_c","$RefreshReg$"],"sources":["C:/Users/Dinopc/Desktop/PROJETOS_DEV/bus-app/frontend/src/components/GeocodingSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GeocodingSearch = ({ onPointSelect }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  const handleGeocodingSearch = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/geocoding?query=${query}`);\r\n      setResults(response.data || []);\r\n    } catch (error) {\r\n      console.error('Erro na pesquisa de geocodificação:', error);\r\n    }\r\n  };\r\n\r\n  const handlePointSelection = (result) => {\r\n    setSelectedItem(result);\r\n    if (typeof onPointSelect === 'function') {\r\n      onPointSelect(result);\r\n    } else {\r\n      console.error('onPointSelect não é uma função');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Insira uma localidade ou ponto de ônibus\" />\r\n      <button onClick={handleGeocodingSearch}>Pesquisar</button>\r\n      <ul>\r\n        {Array.isArray(results) &&\r\n          results.map((result, index) => (\r\n            <li key={index} onClick={() => handlePointSelection(result)} style={{ backgroundColor: selectedItem === result ? 'lightblue' : 'white' }}>\r\n              {result.properties.name} - Lat: {result.geometry.coordinates[1]}, Lng: {result.geometry.coordinates[0]}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeocodingSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMa,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACxC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,yCAAwCR,KAAM,EAAC,CAAC;MAClFG,UAAU,CAACI,QAAQ,CAACE,IAAI,IAAI,EAAE,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF,CAAC;EAED,MAAME,oBAAoB,GAAIC,MAAM,IAAK;IACvCR,eAAe,CAACQ,MAAM,CAAC;IACvB,IAAI,OAAOf,aAAa,KAAK,UAAU,EAAE;MACvCA,aAAa,CAACe,MAAM,CAAC;IACvB,CAAC,MAAM;MACLF,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAC;IACjD;EACF,CAAC;EAED,oBACEd,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEhB,KAAM;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACI,WAAW,EAAC;IAA0C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrI5B,OAAA;MAAQ6B,OAAO,EAAEnB,qBAAsB;MAAAQ,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D5B,OAAA;MAAAkB,QAAA,EACGY,KAAK,CAACC,OAAO,CAACzB,OAAO,CAAC,IACrBA,OAAO,CAAC0B,GAAG,CAAC,CAACf,MAAM,EAAEgB,KAAK,kBACxBjC,OAAA;QAAgB6B,OAAO,EAAEA,CAAA,KAAMb,oBAAoB,CAACC,MAAM,CAAE;QAACiB,KAAK,EAAE;UAAEC,eAAe,EAAE3B,YAAY,KAAKS,MAAM,GAAG,WAAW,GAAG;QAAQ,CAAE;QAAAC,QAAA,GACtID,MAAM,CAACmB,UAAU,CAACC,IAAI,EAAC,UAAQ,EAACpB,MAAM,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,EAAC,SAAO,EAACtB,MAAM,CAACqB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC;MAAA,GAD/FN,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCIF,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAuCrB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinopc\\\\Desktop\\\\PROJETOS_DEV\\\\bus-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GeocodingSearch from './components/GeocodingSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedBusLine, setSelectedBusLine] = useState('');\n  const [busData, setBusData] = useState([]);\n  const [departureTime, setDepartureTime] = useState('');\n  const [setSelectedPoint] = useState(null);\n  const [setReferenceTravelTime] = useState(null);\n  const [pointSelected, setPointSelected] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n  useEffect(() => {\n    const referencePoint = {\n      lat: -22.9519,\n      lng: -43.2106\n    };\n    const fetchData = async () => {\n      try {\n        if (pointSelected) {\n          const locations = [{\n            id: 'bus',\n            coords: referencePoint\n          }];\n          const departure_searches = [{\n            id: 'departure_search',\n            departure_location_id: 'bus',\n            arrival_location_ids: busData.map(bus => bus.ordem),\n            departure_time: departureTime,\n            travel_time: 1800\n          }];\n          const response = await axios.post('http://127.0.0.1:8000/calculate-travel-time', {\n            locations,\n            departure_searches\n          });\n          const travelTimeResult = response.data.results.find(result => result.search_id === 'bus');\n          setReferenceTravelTime(travelTimeResult ? Math.floor(travelTimeResult.locations[0].properties[0].travel_time / 60) : null);\n        }\n      } catch (error) {\n        console.error('Erro ao calcular o tempo de viagem até o ponto de referência:', error);\n      }\n    };\n    if (departureTime) {\n      fetchData();\n    }\n  }, [departureTime, busData, pointSelected]);\n  const handleBusLineSelection = async busLine => {\n    setSelectedBusLine(busLine);\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/bus-data/${busLine}`);\n      const simulatedBusData = response.data.map(bus => ({\n        ...bus,\n        tempoPartida: Math.floor(Math.random() * 1800) + 300\n      })) || [];\n      setBusData(simulatedBusData);\n    } catch (error) {\n      console.error('Erro ao obter os dados dos ônibus da linha:', error);\n    }\n  };\n  useEffect(() => {\n    const fetchBusLines = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/linhas-onibus');\n        const data = response.data;\n        const select = document.getElementById('linhas-onibus');\n        select.innerHTML = '';\n        const defaultOption = document.createElement('option');\n        defaultOption.value = '';\n        defaultOption.text = 'Selecione uma linha de ônibus';\n        select.add(defaultOption);\n        if (data.linhas && data.linhas.length > 0) {\n          data.linhas.forEach(linha => {\n            const option = document.createElement('option');\n            option.value = linha;\n            option.text = linha;\n            select.add(option);\n          });\n        } else {\n          console.error('Erro: Nenhuma linha de ônibus encontrada.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar as linhas de ônibus:', error);\n      }\n    };\n    fetchBusLines();\n  }, [pointSelected]);\n  const handlePointSelection = result => {\n    console.log('Ponto selecionado:', result);\n    setSelectedPoint(result);\n    setPointSelected(true);\n  };\n  const handleDepartureTimeSelection = time => {\n    setDepartureTime(time);\n  };\n  const handleGeocodingSearch = () => {\n    setSelectedBusLine('');\n    setBusData([]);\n    setDepartureTime('');\n    setSelectedPoint(null);\n    setReferenceTravelTime(null);\n    setPointSelected(false);\n  };\n  const handleEmailSubscription = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/subscribe', {\n        email: userEmail\n      });\n      console.log(response.data.message);\n    } catch (error) {\n      console.error('Erro ao cadastrar o e-mail:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Bem-vindo ao Bus App!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Este \\xE9 um aplicativo que permite visualizar informa\\xE7\\xF5es de \\xF4nibus, calcular tempos de viagem e receber notifica\\xE7\\xF5es por e-mail quando um \\xF4nibus est\\xE1 a 10 minutos de dist\\xE2ncia.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: userEmail,\n      onChange: e => setUserEmail(e.target.value),\n      placeholder: \"Insira seu e-mail para notifica\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEmailSubscription,\n      children: \"Inscrever-se\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(GeocodingSearch, {\n      onPointSelect: result => handlePointSelection(result)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"linhas-onibus\",\n      onChange: e => handleBusLineSelection(e.target.value),\n      disabled: !pointSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: departureTime,\n      onChange: e => handleDepartureTimeSelection(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeocodingSearch,\n      children: \"Limpar Pesquisa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), selectedBusLine && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\xD4nibus da linha \", selectedBusLine]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Linha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Velocidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tempo at\\xE9 o local de partida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: busData.map((bus, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: bus.linha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [bus.velocidade, \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: bus.tempoPartida !== null ? `${bus.tempoPartida} seg` : '-'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5kIwQ7Cmhwtbxe1KplIgM4seZD4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","GeocodingSearch","jsxDEV","_jsxDEV","App","_s","selectedBusLine","setSelectedBusLine","busData","setBusData","departureTime","setDepartureTime","setSelectedPoint","setReferenceTravelTime","pointSelected","setPointSelected","userEmail","setUserEmail","referencePoint","lat","lng","fetchData","locations","id","coords","departure_searches","departure_location_id","arrival_location_ids","map","bus","ordem","departure_time","travel_time","response","post","travelTimeResult","data","results","find","result","search_id","Math","floor","properties","error","console","handleBusLineSelection","busLine","get","simulatedBusData","tempoPartida","random","fetchBusLines","select","document","getElementById","innerHTML","defaultOption","createElement","value","text","add","linhas","length","forEach","linha","option","handlePointSelection","log","handleDepartureTimeSelection","time","handleGeocodingSearch","handleEmailSubscription","email","message","class","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","onPointSelect","disabled","index","velocidade","_c","$RefreshReg$"],"sources":["C:/Users/Dinopc/Desktop/PROJETOS_DEV/bus-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport GeocodingSearch from './components/GeocodingSearch';\n\nfunction App() {\n  const [selectedBusLine, setSelectedBusLine] = useState('');\n  const [busData, setBusData] = useState([]);\n  const [departureTime, setDepartureTime] = useState('');\n  const [setSelectedPoint] = useState(null);\n  const [setReferenceTravelTime] = useState(null);\n  const [pointSelected, setPointSelected] = useState(false);\n  const [userEmail, setUserEmail] = useState('');\n\n  useEffect(() => {\n    const referencePoint = { lat: -22.9519, lng: -43.2106 };\n\n    const fetchData = async () => {\n      try {\n        if (pointSelected) {\n          const locations = [{ id: 'bus', coords: referencePoint }];\n          const departure_searches = [{\n            id: 'departure_search',\n            departure_location_id: 'bus',\n            arrival_location_ids: busData.map(bus => bus.ordem),\n            departure_time: departureTime,\n            travel_time: 1800,\n          }];\n\n          const response = await axios.post('http://127.0.0.1:8000/calculate-travel-time', { locations, departure_searches });\n\n          const travelTimeResult = response.data.results.find(result => result.search_id === 'bus');\n          setReferenceTravelTime(travelTimeResult ? Math.floor(travelTimeResult.locations[0].properties[0].travel_time / 60) : null);\n        }\n      } catch (error) {\n        console.error('Erro ao calcular o tempo de viagem até o ponto de referência:', error);\n      }\n    };\n\n    if (departureTime) {\n      fetchData();\n    }\n  }, [departureTime, busData, pointSelected]);\n\n  const handleBusLineSelection = async (busLine) => {\n    setSelectedBusLine(busLine);\n    try {\n      const response = await axios.get(`http://127.0.0.1:8000/bus-data/${busLine}`);\n      const simulatedBusData = response.data.map(bus => ({\n        ...bus,\n        tempoPartida: Math.floor(Math.random() * 1800) + 300,\n      })) || [];\n      setBusData(simulatedBusData);\n    } catch (error) {\n      console.error('Erro ao obter os dados dos ônibus da linha:', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchBusLines = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:8000/linhas-onibus');\n        const data = response.data;\n        const select = document.getElementById('linhas-onibus');\n\n        select.innerHTML = '';\n\n        const defaultOption = document.createElement('option');\n        defaultOption.value = '';\n        defaultOption.text = 'Selecione uma linha de ônibus';\n        select.add(defaultOption);\n\n        if (data.linhas && data.linhas.length > 0) {\n          data.linhas.forEach(linha => {\n            const option = document.createElement('option');\n            option.value = linha;\n            option.text = linha;\n            select.add(option);\n          });\n        } else {\n          console.error('Erro: Nenhuma linha de ônibus encontrada.');\n        }\n      } catch (error) {\n        console.error('Erro ao buscar as linhas de ônibus:', error);\n      }\n    };\n\n    fetchBusLines();\n  }, [pointSelected]);\n\n  const handlePointSelection = (result) => {\n    console.log('Ponto selecionado:', result);\n    setSelectedPoint(result);\n    setPointSelected(true);\n  };\n\n  const handleDepartureTimeSelection = (time) => {\n    setDepartureTime(time);\n  };\n\n  const handleGeocodingSearch = () => {\n\n    setSelectedBusLine('');\n    setBusData([]);\n    setDepartureTime('');\n    setSelectedPoint(null);\n    setReferenceTravelTime(null);\n    setPointSelected(false);\n    \n  };\n\n  const handleEmailSubscription = async () => {\n    try {\n        const response = await axios.post('http://localhost:8000/subscribe', { email: userEmail });\n        console.log(response.data.message);\n    } catch (error) {\n        console.error('Erro ao cadastrar o e-mail:', error);\n    }\n};\n\n  return (\n    <div class='container'>\n        <div>\n            <h1>Bem-vindo ao Bus App!</h1>\n        </div>\n        <div>\n            <h3>Este é um aplicativo que permite visualizar informações de ônibus, calcular tempos de viagem e receber notificações por e-mail quando um ônibus está a 10 minutos de distância.</h3>\n        </div>\n        <div></div>\n        <input\n        type=\"email\"\n        value={userEmail}\n        onChange={(e) => setUserEmail(e.target.value)}\n        placeholder=\"Insira seu e-mail para notificações\"\n    />\n    <button onClick={handleEmailSubscription}>Inscrever-se</button>\n      <GeocodingSearch onPointSelect={(result) => handlePointSelection(result)} />\n      <select id=\"linhas-onibus\" onChange={(e) => handleBusLineSelection(e.target.value)} disabled={!pointSelected}>\n        {}\n      </select>\n      <input type=\"time\" value={departureTime} onChange={(e) => handleDepartureTimeSelection(e.target.value)} />\n      <button onClick={handleGeocodingSearch}>Limpar Pesquisa</button>\n      {selectedBusLine && (\n        <div>\n          <h2>Ônibus da linha {selectedBusLine}</h2>\n          <table>\n            <thead>\n              <tr>\n                <th>Linha</th>\n                <th>Velocidade</th>\n                <th>Tempo até o local de partida</th>\n              </tr>\n            </thead>\n            <tbody>\n              {busData.map((bus, index) => (\n                <tr key={index}>\n                  <td>{bus.linha}</td>\n                  <td>{bus.velocidade} km/h</td>\n                  <td>{bus.tempoPartida !== null ? `${bus.tempoPartida} seg` : '-'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
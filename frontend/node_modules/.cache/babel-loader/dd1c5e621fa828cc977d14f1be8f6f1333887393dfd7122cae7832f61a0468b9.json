{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinopc\\\\Desktop\\\\PROJETOS_DEV\\\\bus-app\\\\frontend\\\\src\\\\components\\\\GeocodingSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeocodingSearch = ({\n  onPointSelect\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const handleGeocodingSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/geocoding?query=${query}`);\n      setResults(response.data || []);\n    } catch (error) {\n      console.error('Erro na pesquisa de geocodificação:', error);\n    }\n  };\n  const handlePointSelection = result => {\n    const rioDeJaneiroBounds = {\n      minLat: -23.0838,\n      maxLat: -22.7492,\n      minLng: -43.7966,\n      maxLng: -43.1176\n    };\n    const isWithinRioDeJaneiro = result.geometry.coordinates[1] >= rioDeJaneiroBounds.minLat && result.geometry.coordinates[1] <= rioDeJaneiroBounds.maxLat && result.geometry.coordinates[0] >= rioDeJaneiroBounds.minLng && result.geometry.coordinates[0] <= rioDeJaneiroBounds.maxLng;\n    if (isWithinRioDeJaneiro) {\n      setSelectedItem(result);\n      if (typeof onPointSelect === 'function') {\n        onPointSelect(result);\n      } else {\n        console.error('onPointSelect não é uma função');\n      }\n    } else {\n      setSelectedItem(null);\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"location_input\",\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Insira uma localidade ou ponto de \\xF4nibus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGeocodingSearch,\n      children: \"Pesquisar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Array.isArray(results) && results.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handlePointSelection(result),\n        style: {\n          backgroundColor: selectedItem === result ? 'lightblue' : 'white'\n        },\n        children: [result.properties.name, \" - Lat: \", result.geometry.coordinates[1], \", Lng: \", result.geometry.coordinates[0]]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(GeocodingSearch, \"gjgqjAq4QVEtio9exQZguUm2Z6U=\");\n_c = GeocodingSearch;\nexport default GeocodingSearch;\nvar _c;\n$RefreshReg$(_c, \"GeocodingSearch\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GeocodingSearch","onPointSelect","_s","query","setQuery","results","setResults","selectedItem","setSelectedItem","handleGeocodingSearch","response","get","data","error","console","handlePointSelection","result","rioDeJaneiroBounds","minLat","maxLat","minLng","maxLng","isWithinRioDeJaneiro","geometry","coordinates","children","id","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","map","index","style","backgroundColor","properties","name","_c","$RefreshReg$"],"sources":["C:/Users/Dinopc/Desktop/PROJETOS_DEV/bus-app/frontend/src/components/GeocodingSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst GeocodingSearch = ({ onPointSelect }) => {\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    const handleGeocodingSearch = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/geocoding?query=${query}`);\r\n            setResults(response.data || []);\r\n        } catch (error) {\r\n            console.error('Erro na pesquisa de geocodificação:', error);\r\n        }\r\n    };\r\n\r\n    const handlePointSelection = (result) => {\r\n        const rioDeJaneiroBounds = {\r\n            minLat: -23.0838,\r\n            maxLat: -22.7492,\r\n            minLng: -43.7966,\r\n            maxLng: -43.1176,\r\n        };\r\n\r\n        const isWithinRioDeJaneiro = (\r\n            result.geometry.coordinates[1] >= rioDeJaneiroBounds.minLat &&\r\n            result.geometry.coordinates[1] <= rioDeJaneiroBounds.maxLat &&\r\n            result.geometry.coordinates[0] >= rioDeJaneiroBounds.minLng &&\r\n            result.geometry.coordinates[0] <= rioDeJaneiroBounds.maxLng\r\n        );\r\n\r\n        if (isWithinRioDeJaneiro) {\r\n            setSelectedItem(result);\r\n            if (typeof onPointSelect === 'function') {\r\n                onPointSelect(result);\r\n            } else {\r\n                console.error('onPointSelect não é uma função');\r\n            }\r\n        } else {\r\n            setSelectedItem(null);\r\n            setResults([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input id='location_input' type=\"text\" value={query} onChange={(e) => setQuery(e.target.value)} placeholder=\"Insira uma localidade ou ponto de ônibus\" />\r\n            <button onClick={handleGeocodingSearch}>Pesquisar</button>\r\n            <ul>\r\n                {Array.isArray(results) &&\r\n                    results.map((result, index) => (\r\n                        <li key={index} onClick={() => handlePointSelection(result)} style={{ backgroundColor: selectedItem === result ? 'lightblue' : 'white' }}>\r\n                            {result.properties.name} - Lat: {result.geometry.coordinates[1]}, Lng: {result.geometry.coordinates[0]}\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GeocodingSearch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
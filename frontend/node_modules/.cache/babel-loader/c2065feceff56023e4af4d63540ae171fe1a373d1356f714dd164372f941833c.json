{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dinopc\\\\Desktop\\\\PROJETOS_DEV\\\\bus-app\\\\frontend\\\\src\\\\components\\\\GeocodingSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeocodingSearch = ({\n  onPointSelect\n}) => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [results, setResults] = useState([]);\n  const {\n    ready,\n    value,\n    suggestions: {\n      status,\n      data\n    },\n    setValue\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      /* Define opções conforme necessário */\n    },\n    debounce: 300\n  });\n  const handleSelect = async address => {\n    setValue(address, false);\n    setResults([]); // Limpa os resultados quando uma opção é selecionada\n\n    try {\n      const results = await getGeocode({\n        address\n      });\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n      onPointSelect({\n        address,\n        lat,\n        lng\n      });\n    } catch (error) {\n      console.error('Erro ao obter as coordenadas:', error);\n    }\n  };\n  const handleChange = e => {\n    setAddress(e.target.value);\n    setValue(e.target.value);\n    if (!e.target.value) {\n      // Limpa os resultados se o input estiver vazio\n      setResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: address,\n      onChange: handleChange,\n      disabled: !ready,\n      placeholder: \"Digite o endere\\xE7o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: status === 'OK' && (data || []).map(({\n        id,\n        description\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelect(description),\n        children: description\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(GeocodingSearch, \"stz5RD1HvYnC3BKlzlVVmNFXcec=\", false, function () {\n  return [usePlacesAutocomplete];\n});\n_c = GeocodingSearch;\nexport default GeocodingSearch;\nvar _c;\n$RefreshReg$(_c, \"GeocodingSearch\");","map":{"version":3,"names":["React","useState","usePlacesAutocomplete","getGeocode","getLatLng","jsxDEV","_jsxDEV","GeocodingSearch","onPointSelect","_s","address","setAddress","results","setResults","ready","value","suggestions","status","data","setValue","requestOptions","debounce","handleSelect","lat","lng","error","console","handleChange","e","target","children","onChange","disabled","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","id","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dinopc/Desktop/PROJETOS_DEV/bus-app/frontend/src/components/GeocodingSearch.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\r\n\r\nconst GeocodingSearch = ({ onPointSelect }) => {\r\n  const [address, setAddress] = useState('');\r\n  const [results, setResults] = useState([]);\r\n\r\n  const {\r\n    ready,\r\n    value,\r\n    suggestions: { status, data },\r\n    setValue,\r\n  } = usePlacesAutocomplete({\r\n    requestOptions: {\r\n      /* Define opções conforme necessário */\r\n    },\r\n    debounce: 300,\r\n  });\r\n\r\n  const handleSelect = async (address) => {\r\n    setValue(address, false);\r\n    setResults([]); // Limpa os resultados quando uma opção é selecionada\r\n\r\n    try {\r\n      const results = await getGeocode({ address });\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      onPointSelect({ address, lat, lng });\r\n    } catch (error) {\r\n      console.error('Erro ao obter as coordenadas:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setAddress(e.target.value);\r\n    setValue(e.target.value);\r\n\r\n    if (!e.target.value) {\r\n      // Limpa os resultados se o input estiver vazio\r\n      setResults([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        value={address}\r\n        onChange={handleChange}\r\n        disabled={!ready}\r\n        placeholder=\"Digite o endereço\"\r\n      />\r\n      <ul>\r\n        {status === 'OK' &&\r\n          (data || []).map(({ id, description }) => (\r\n            <li key={id} onClick={() => handleSelect(description)}>\r\n              {description}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeocodingSearch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,qBAAqB,IAAIC,UAAU,EAAEC,SAAS,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM;IACJa,KAAK;IACLC,KAAK;IACLC,WAAW,EAAE;MAAEC,MAAM;MAAEC;IAAK,CAAC;IAC7BC;EACF,CAAC,GAAGjB,qBAAqB,CAAC;IACxBkB,cAAc,EAAE;MACd;IAAA,CACD;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAG,MAAOZ,OAAO,IAAK;IACtCS,QAAQ,CAACT,OAAO,EAAE,KAAK,CAAC;IACxBG,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF,MAAMD,OAAO,GAAG,MAAMT,UAAU,CAAC;QAAEO;MAAQ,CAAC,CAAC;MAC7C,MAAM;QAAEa,GAAG;QAAEC;MAAI,CAAC,GAAG,MAAMpB,SAAS,CAACQ,OAAO,CAAC,CAAC,CAAC,CAAC;MAChDJ,aAAa,CAAC;QAAEE,OAAO;QAAEa,GAAG;QAAEC;MAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACd,KAAK,CAAC;IAC1BI,QAAQ,CAACS,CAAC,CAACC,MAAM,CAACd,KAAK,CAAC;IAExB,IAAI,CAACa,CAAC,CAACC,MAAM,CAACd,KAAK,EAAE;MACnB;MACAF,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MACES,KAAK,EAAEL,OAAQ;MACfqB,QAAQ,EAAEJ,YAAa;MACvBK,QAAQ,EAAE,CAAClB,KAAM;MACjBmB,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF/B,OAAA;MAAAwB,QAAA,EACGb,MAAM,KAAK,IAAI,IACd,CAACC,IAAI,IAAI,EAAE,EAAEoB,GAAG,CAAC,CAAC;QAAEC,EAAE;QAAEC;MAAY,CAAC,kBACnClC,OAAA;QAAamC,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACkB,WAAW,CAAE;QAAAV,QAAA,EACnDU;MAAW,GADLD,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAzDIF,eAAe;EAAA,QASfL,qBAAqB;AAAA;AAAAwC,EAAA,GATrBnC,eAAe;AA2DrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}